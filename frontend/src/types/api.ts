// --- –ë–∞–∑–æ–≤—ã–µ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ ---

// –°–æ–≤–ø–∞–¥–∞–µ—Ç —Å Prisma Enum Role
export enum Role {
    USER = 'USER',
    ADMIN = 'ADMIN',
  }
  
  // –¢–∏–ø –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ø–∞—Ä–æ–ª—è, –∫–∞–∫ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å API)
  export interface User {
    id: number;
    email: string;
    role: Role;
    createdAt: string; // Prisma –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç DateTime –∫–∞–∫ —Å—Ç—Ä–æ–∫—É ISO 8601
    name: string;
  }
  // –¢–∏–ø –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ (–±–µ–∑ –ø–∞—Ä–æ–ª—è, –∫–∞–∫ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å API)
  export interface CalculationType {
    id: number;
    name: string;
    description: string | null;
    createdAt: string;
    updatedAt: string;
  }
  
  // –¢–∏–ø –¥–ª—è Material (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Prisma –º–æ–¥–µ–ª–∏)
  export interface Material {
    id: number;
    code: string;
    name: string;
    createdAt: string;
    updatedAt: string;
    // –ú—ã –Ω–µ –±—É–¥–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å screenTypes –∏ cabinets –∑–¥–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é
  }
  
  // –¢–∏–ø –¥–ª—è Option (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Prisma –º–æ–¥–µ–ª–∏)
  export interface Option {
    id: number;
    code: string;
    name: string;
    createdAt: string;
    updatedAt: string;
  }
  
  // –¢–∏–ø –¥–ª—è Manufacturer (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Prisma –º–æ–¥–µ–ª–∏)
  export interface Manufacturer {
    id: number;
    code: string;
    name:string;
    createdAt: string;
    updatedAt: string;
  }
  
  // –¢–∏–ø –¥–ª—è ScreenType (–ø–æ–∫–∞ –±–µ–∑ —Å–≤—è–∑–µ–π, –∏—Ö –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ)
  export interface ScreenType {
    id: number;
    name: string;
    brightness: number | null; // –ú–æ–∂–µ—Ç –±—ã—Ç—å null
    createdAt: string;
    updatedAt: string;
  }

  // --- üëá –ù–û–í–´–ô –¢–ò–ü –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–∏—Ö–æ–¥—è—â–∏—Ö –æ—Ç /api/v1/screen-types ---
// –û–ø–∏—Å—ã–≤–∞–µ—Ç –û–î–ò–ù —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ 'data' –≤ –æ—Ç–≤–µ—Ç–µ API
export interface ScreenTypeFromApi extends ScreenType {
    materials: { code: string; name: string }[]; // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    options: { code: string; name: string }[];   // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–ø—Ü–∏–π
  }
  
  // –¢–∏–ø –¥–ª—è –í–°–ï–ì–û –æ–±—ä–µ–∫—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç /api/v1/screen-types
  export interface ScreenTypeListApiResponse {
    message: string;
    data: ScreenTypeFromApi[]; // –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–∏–ø–∞ ScreenTypeFromApi
  }
  
  // –¢–∏–ø –¥–ª—è IpProtection (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Prisma –º–æ–¥–µ–ª–∏)
  export interface IpProtection {
    id: number;
    code: string;
    protectionSolid: string;
    protectionWater: string;
    createdAt: string;
    updatedAt: string;
  }
  
  // –¢–∏–ø –¥–ª—è ComponentService (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Prisma –º–æ–¥–µ–ª–∏)
  // Prisma Decimal –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞, –Ω–æ –ª—É—á—à–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ number –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  export interface ComponentService {
    id: number;
    category: string | null;
    code: string;
    name: string;
    priceUsd: string | null; // –ü—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
    priceRub: string | null; // –ü—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
    createdAt: string;
    updatedAt: string;
  }
  
  // --- –ú–æ–¥–µ–ª–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å Pixel ---
  
  // –¢–∏–ø –¥–ª—è PixelStepDefinition (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Prisma –º–æ–¥–µ–ª–∏)
  export interface PixelStepDefinition {
    id: number;
    code: string;
    stepValue: string; // –ü—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –∏–∑ Decimal
    createdAt: string;
    updatedAt: string;
  }
  
  // –¢–∏–ø –¥–ª—è PixelType (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Prisma –º–æ–¥–µ–ª–∏)
  export interface PixelType {
    id: number;
    type: string;
    frequency: number | null;
    createdAt: string;
    updatedAt: string;
  }
  
  // –¢–∏–ø –¥–ª—è PixelOption (–±–µ–∑ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  export interface PixelOption {
    id: number;
    pixelCode: string;
    moduleWidth: number;
    moduleHeight: number;
    optionName: string | null;
    stepDefinitionId?: number; // ID –¥–ª—è —Å–≤—è–∑–∏, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º include
    pixelTypeId: number | null;
    screenTypeId: number | null;
    createdAt: string;
    updatedAt: string;
    
    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –µ—Å–ª–∏ –ë–£–î–ï–ú –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å include
    // stepDefinition?: PixelStepDefinition;
    // pixelType?: PixelType;
    // screenType?: ScreenType;
  }
  
  // --- –ó–∞–≤–∏—Å–∏–º—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ ---
  
  // –¢–∏–ø –¥–ª—è Module (–±–µ–∑ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  export interface Module {
    id: number;
    sku: string;
    type: string | null;
    moduleWidth: number;
    moduleHeight: number;
    moduleFrequency: number | null;
    moduleBrightness: number | null;
    priceUsd: string | null; // –ü—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –∏–∑ Decimal
    manufacturerCode: string | null;
    screenTypeId: number;
    pixelCode: string; // –°—Å—ã–ª–∫–∞ –Ω–∞ PixelStepDefinition
    createdAt: string;
    updatedAt: string;
  
    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –µ—Å–ª–∏ –ë–£–î–ï–ú –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å include
    // manufacturer?: Manufacturer;
    // screenType?: ScreenType;
    // stepDefinition?: PixelStepDefinition;
  }
  
  // –¢–∏–ø –¥–ª—è Cabinet (–±–µ–∑ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  export interface Cabinet {
    id: number;
    sku: string;
    name: string | null;
    width: number | null;
    height: number | null;
    placement: string | null;
    moduleWidth: number | null;
    moduleHeight: number | null;
    modulesCount: number | null;
    priceUsd: string | null; // –ü—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –∏–∑ Decimal
    screenTypeId: number | null;
    createdAt: string;
    updatedAt: string;
  
    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –µ—Å–ª–∏ –ë–£–î–ï–ú –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å include
    // screenType?: ScreenType;
    // –ú—ã –Ω–µ –±—É–¥–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å materials –∏ components –∑–¥–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é
  }
  
  
  // --- –°–≤—è–∑—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã M-N ---
  // –û–±—ã—á–Ω–æ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –Ω–∏–º –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º include, –ø–æ—ç—Ç–æ–º—É –æ–ø—Ä–µ–¥–µ–ª–∏–º —Ç–∏–ø—ã —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
  
  export interface ScreenTypeMaterialRelation {
    screenTypeId: number;
    materialId: number;
    screenType: ScreenType; // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
    material: Material;     // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
  }
  
  export interface ScreenTypeOptionRelation {
    screenTypeId: number;
    optionId: number;
    screenType: ScreenType; // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
    option: Option;         // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
  }
  
  export interface CabinetMaterialRelation {
    cabinetId: number;
    materialId: number;
    cabinet: Cabinet;   // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
    material: Material; // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
  }
  
  export interface CabinetComponentRelation {
    cabinetId: number;
    componentId: number;
    quantity: number;
    cabinet: Cabinet;           // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
    component: ComponentService; // –û–∂–∏–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
  }
  
  
  // --- –¢–∏–ø—ã –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) ---
  
  // –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–∏–ø –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å–ø–∏—Å–∫–∞ ScreenType —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏
  export interface ScreenTypeWithRelations extends ScreenType {
    materials: ScreenTypeMaterialRelation[];
    options: ScreenTypeOptionRelation[];
  }