// src/controllers/cabinetController.ts
import { Request, Response, NextFunction } from "express";
import { PrismaClient, Prisma, ComponentService, Cabinet, Material, ScreenType } from '@prisma/client'; // –£–±–µ—Ä–µ–º –ª–∏—à–Ω–∏–µ –∏–º–ø–æ—Ä—Ç—ã –ø–æ–∑–∂–µ
import { Decimal } from '@prisma/client/runtime/library';
import { prisma } from '../lib/prisma';
import { asyncHandler } from '../middleware/asyncHandler';


// --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ---
interface ComponentDetail {
    componentId: number;
    code: string;
    name: string;
    quantity: number;
    priceUsd: Decimal | null;
    priceRub: Decimal | null;
    category?: string | null;
}

interface CabinetComponentRelation {
    quantity: number;
    component: {
        id: number;
        code: string;
        name: string;
        priceUsd: Decimal | null;
        priceRub: Decimal | null;
        category?: string | null;
    }
}

// --- –¢–∏–ø –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ö–∞–±–∏–Ω–µ—Ç–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ —á–µ—Ä–µ–∑ Prisma GetPayload ---
type CabinetWithDetails = Prisma.CabinetGetPayload<{
  include: {
    // –°–≤—è–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –ï–°–¢–¨ –≤ —Ç–µ–∫—É—â–µ–π –º–æ–¥–µ–ª–∏ Cabinet:
    locations: { // –°–≤—è–∑—å M-N LocationCabinet
        include: { location: { select: { code: true, name: true } } }
    };
    materials: { // –°–≤—è–∑—å M-N MaterialCabinet
        include: { material: { select: { code: true, name: true } } }
    };
    placements: { // –°–≤—è–∑—å M-N CabinetPlacementCabinet
        include: { placement: { select: { code: true, name: true } } }
    };
    components: { // –°–≤—è–∑—å M-N CabinetComponent
        select: {
            quantity: true;
            component: { // –í–∫–ª—é—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ ComponentService
                select: { id: true; code: true; name: true; priceUsd: true; priceRub: true; category: true }
            }
        }
    };
    // –°–≤—è–∑–µ–π —Å ScreenType, Pitch –∏ —Ç.–¥. –Ω–∞–ø—Ä—è–º—É—é —É –ö–∞–±–∏–Ω–µ—Ç–∞ –ù–ï–¢
  }
}>

// --- –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Cabinet –≤ –æ—Ç–≤–µ—Ç API ---
const mapCabinetToResponse = (cabinet: CabinetWithDetails | null) => {
    if (!cabinet) return null;
    // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –ø–æ–ª—è —Å–≤—è–∑–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª—å–Ω–æ –µ—Å—Ç—å –≤ CabinetWithDetails
    const {
        locations, materials, placements, components,
        priceUsd,
        ...rest // –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –º–æ–¥–µ–ª–∏ Cabinet (id, sku, name, width, height, moduleWidth, moduleHeight, modulesCount, etc.)
    } = cabinet;

    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–≤—è–∑–µ–π
    const locationInfo = locations?.[0]?.location; // –ü—Ä–∏–º–µ—Ä: –±–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –ª–æ–∫–∞—Ü–∏—é (–µ—Å–ª–∏ —Å–≤—è–∑—å 1-M –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–ª–∞—Å—å)
                                                 // –ò–ª–∏ —Å–æ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤: locations?.map(lc => lc.location) ?? []
    const materialInfo = materials?.map(mc => mc.material) ?? []; // –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ Material
    const placementInfo = placements?.[0]?.placement; // –ü—Ä–∏–º–µ—Ä: –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–æ)
    const componentDetails: ComponentDetail[] = components?.map((comp): ComponentDetail => ({
        componentId: comp.component.id,
        code: comp.component.code,
        name: comp.component.name,
        quantity: comp.quantity,
        priceUsd: comp.component.priceUsd,
        priceRub: comp.component.priceRub,
        category: comp.component.category,
    })) ?? [];

    // --- –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º, –Ω–æ –∫–æ–¥—ã/–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å) ---
    let powerUnitInfo = componentDetails.find((c: ComponentDetail) => c.category === '–ë–ª–æ–∫–∏ –ø–∏—Ç–∞–Ω–∏—è'); // –ò—â–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let receiverInfo = componentDetails.find((c: ComponentDetail) => c.category === '–ü—Ä–∏–µ–º–Ω—ã–µ –∫–∞—Ä—Ç—ã'); // –ò—â–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let coolerInfo = componentDetails.find((c: ComponentDetail) => c.category === '–û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ');

    // --- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ ---
    return {
        // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –∏–∑ rest (—Ç.–µ. –∏–∑ –º–æ–¥–µ–ª–∏ Cabinet)
        id: rest.id,
        sku: rest.sku,
        name: rest.name,
        width: rest.width,
        height: rest.height,
        moduleWidth: rest.moduleWidth,
        moduleHeight: rest.moduleHeight,
        modulesCount: rest.modulesCount,
        priceUsd: priceUsd?.toString() ?? null, // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Decimal –≤ —Å—Ç—Ä–æ–∫—É

        // –î–∞–Ω–Ω—ã–µ –∏–∑ —Å–≤—è–∑–µ–π (–ø—Ä–∏–º–µ—Ä—ã)
        locationCode: locationInfo?.code ?? null,
        locationName: locationInfo?.name ?? null,
        materialCodes: materialInfo.map(m => m.code), // –ú–∞—Å—Å–∏–≤ –∫–æ–¥–æ–≤ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        placementCode: placementInfo?.code ?? null,
        placementName: placementInfo?.name ?? null,

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö (–ø—Ä–∏–º–µ—Ä—ã)
        powerUnitName: powerUnitInfo?.name ?? null,
        powerUnitQuantity: powerUnitInfo?.quantity ?? 0,
        receiverName: receiverInfo?.name ?? null,
        receiverQuantity: receiverInfo?.quantity ?? 0,
        coolerQuantity: coolerInfo?.quantity ?? 0,

        // –î–µ—Ç–∞–ª–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        // components: componentDetails.map(c => ({...c, priceUsd: c.priceUsd?.toString() ?? null, priceRub: c.priceRub?.toString() ?? null })),

        createdAt: rest.createdAt,
        updatedAt: rest.updatedAt,
    };
};


// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤ (–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ include)
export const getAllCabinets = asyncHandler(async (req: Request, res: Response): Promise<void> => {
    const cabinets = await prisma.cabinet.findMany({
        orderBy: { sku: 'asc' }, // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ SKU
        include: { // –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
            locations: { include: { location: { select: { code: true, name: true } } } },
            materials: { include: { material: { select: { code: true, name: true } } } },
            placements: { include: { placement: { select: { code: true, name: true } } } },
            components: {
                select: {
                    quantity: true,
                    component: { select: { id: true, code: true, name: true, priceUsd: true, priceRub: true, category: true } }
                }
            }
        }
    });
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞–ø–ø–µ—Ä
    const responseData = cabinets.map(mapCabinetToResponse);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∏—Å—Ç—ã–π –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö (–∫–∞–∫ –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö)
    res.status(200).json(responseData);
});