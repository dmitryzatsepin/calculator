// src/controllers/moduleController.ts
import { Request, Response, NextFunction } from "express";
import { PrismaClient, Prisma } from "@prisma/client"; // –£–±–µ—Ä–µ–º –ª–∏—à–Ω–µ–µ –ø–æ–∑–∂–µ
import { prisma } from '../lib/prisma';
import { asyncHandler } from '../middleware/asyncHandler'; // –û—Å—Ç–∞–≤–ª—è–µ–º
// import { idParamSchema } from '../validators/commonValidators'; // –ü–æ–∫–∞ –Ω–µ –Ω—É–∂–Ω–æ
// import { createModuleSchema, updateModuleSchema } from '../validators/moduleValidators'; // –ü–æ–∫–∞ –Ω–µ –Ω—É–∂–Ω–æ
import { Decimal } from "@prisma/client/runtime/library"; // –û—Å—Ç–∞–≤–ª—è–µ–º, —Ç.–∫. Decimal –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∑–∞–ø—Ä–æ—Å–µ

// --- –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π ---
// (–ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ create/update)
/*
const checkRelatedEntities = async (
    data: { manufacturerCode?: string | null, locationCode?: string | null, pitchCode?: string | null, refreshRateValue?: number | null, brightnessValue?: number | null },
    operation: 'create' | 'update'
) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Location (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∏–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω)
    if (data.locationCode !== undefined && data.locationCode !== null) {
        const locationExists = await prisma.location.findUnique({ where: { code: data.locationCode }, select: {id: true} });
        if (!locationExists) {
            return new Error(`–õ–æ–∫–∞—Ü–∏—è (Location) —Å –∫–æ–¥–æ–º '${data.locationCode}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
        }
    } else if (operation === 'create' && !data.locationCode ) { // –ï—Å–ª–∏ —Å–≤—è–∑—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
         // return new Error(`locationCode –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è.`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Pitch (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –≤—Å–µ–≥–¥–∞)
    if (data.pitchCode !== undefined) {
        const pitchExists = await prisma.pitch.findUnique({ where: { code: data.pitchCode }, select: {id: true} });
        if (!pitchExists) {
            return new Error(`–®–∞–≥ –ø–∏–∫—Å–µ–ª—è (Pitch) —Å –∫–æ–¥–æ–º '${data.pitchCode}' –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        }
    } else if (operation === 'create') {
         return new Error(`pitchCode –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è.`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Manufacturer (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω)
    if (data.manufacturerCode !== undefined && data.manufacturerCode !== null) {
        const manufacturerExists = await prisma.manufacturer.findUnique({ where: { code: data.manufacturerCode }, select: {id: true} });
        if (!manufacturerExists) {
            return new Error(`–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (Manufacturer) —Å –∫–æ–¥–æ–º '${data.manufacturerCode}' –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º RefreshRate (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω)
    if (data.refreshRateValue !== undefined && data.refreshRateValue !== null) {
        const refreshRateExists = await prisma.refreshRate.findUnique({ where: { value: data.refreshRateValue }, select: {value: true} });
        if (!refreshRateExists) {
            return new Error(`–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (RefreshRate) —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º '${data.refreshRateValue}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Brightness (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω)
    if (data.brightnessValue !== undefined && data.brightnessValue !== null) {
        const brightnessExists = await prisma.brightness.findUnique({ where: { value: data.brightnessValue }, select: {value: true} });
        if (!brightnessExists) {
            return new Error(`–Ø—Ä–∫–æ—Å—Ç—å (Brightness) —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º '${data.brightnessValue}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
        }
    }

    return null; // –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã
}
*/

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π (–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω include)
export const getAllModules = asyncHandler(async (req: Request, res: Response) => {
  const modules = await prisma.module.findMany({
    orderBy: { sku: "asc" }, 
    include: { // –í–∫–ª—é—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
        manufacturer: { select: { code: true, name: true } }, // Manufacturer (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        location: { select: { code: true, name: true } },     // Location (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ/–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ?)
        pitch: { select: { code: true, pitchValue: true, moduleWidth: true, moduleHeight: true } }, // Pitch (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
        refreshRate: { select: { value: true } },             // RefreshRate (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        brightness: { select: { value: true } },              // Brightness (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    }
  });

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Decimal –≤ —Å—Ç—Ä–æ–∫–∏
  const responseData = modules.map(m => ({
      ...m,
      priceUsd: m.priceUsd?.toString() ?? null,
      pitch: {
          ...m.pitch,
          pitchValue: m.pitch.pitchValue.toString()
      }
  }));

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∏—Å—Ç—ã–π –º–∞—Å—Å–∏–≤
  res.status(200).json(responseData);
});

// -------------------------------------------------------------------- //
// --- –í–ï–°–¨ –ö–û–î –ù–ò–ñ–ï –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù (getModuleById, create, update, delete) --- //
// -------------------------------------------------------------------- //

/*
// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è –ø–æ ID (–ù—É–∂–¥–∞–µ—Ç—Å—è –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ include)
export const getModuleById = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    // ... (–∫–æ–¥ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è include –∫–∞–∫ –≤ getAllModules –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Decimal) ...
    res.status(501).json({ message: "–ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è –ø–æ ID –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ" });
  }
);
*/

/*
// üìå –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è (–¢–†–ï–ë–£–ï–¢ –ü–û–õ–ù–û–ô –ü–ï–†–ï–†–ê–ë–û–¢–ö–ò)
export const createModule = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    // TODO: –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –ø–æ–¥ –Ω–æ–≤—É—é —Å—Ö–µ–º—É
    // 1. –û–±–Ω–æ–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä createModuleSchema
    // 2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å locationCode, pitchCode, manufacturerCode, refreshRateValue, brightnessValue
    // 3. –û–±–Ω–æ–≤–∏—Ç—å checkRelatedEntities –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–µ—Å—å
    // 4. –û–±–Ω–æ–≤–∏—Ç—å prisma.module.create —Å –Ω–æ–≤—ã–º–∏ —Å–≤—è–∑—è–º–∏
    res.status(501).json({ message: "–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥—É–ª—è –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ" });
  }
);
*/

/*
// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è (–¢–†–ï–ë–£–ï–¢ –ü–û–õ–ù–û–ô –ü–ï–†–ï–†–ê–ë–û–¢–ö–ò)
export const updateModule = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    // TODO: –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –ø–æ–¥ –Ω–æ–≤—É—é —Å—Ö–µ–º—É
    // 1. –û–±–Ω–æ–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä updateModuleSchema
    // 2. –û–±–Ω–æ–≤–∏—Ç—å checkRelatedEntities –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–µ—Å—å
    // 3. –û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–∫—É dataToUpdate –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –∏ —Å–≤—è–∑–µ–π
    // 4. –û–±–Ω–æ–≤–∏—Ç—å prisma.module.update
     res.status(501).json({ message: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ" });
  }
);
*/

/*
// üìå –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è (–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
export const deleteModule = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    // ... (–õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ü–µ–ª–æ–º –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç.–∫. –Ω–∞ Module –Ω–∏–∫—Ç–æ –Ω–µ —Å—Å—ã–ª–∞–µ—Ç—Å—è —Å Restrict) ...
     res.status(501).json({ message: "–£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ" });
  }
);
*/