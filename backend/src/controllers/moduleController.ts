// src/controllers/moduleController.ts
import { Request, Response, NextFunction } from "express";
import { PrismaClient, Prisma } from "@prisma/client";
import { prisma } from "../lib/prisma";
import { asyncHandler } from "../middleware/asyncHandler";
import { idParamSchema } from "../validators/commonValidators";
import {
  createModuleSchema,
  updateModuleSchema,
} from "../validators/moduleValidators";
import { Decimal } from "@prisma/client/runtime/library";

// --- –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π ---
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç null, –µ—Å–ª–∏ –≤—Å–µ –û–ö, –∏–ª–∏ –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏ –¥–ª—è next()
const checkRelatedEntities = async (
    data: { manufacturerCode?: string | null, screenTypeId?: number, pixelCode?: string },
    operation: 'create' | 'update'
) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º ScreenType (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏)
    if (data.screenTypeId !== undefined) {
        const screenTypeExists = await prisma.screenType.findUnique({ where: { id: data.screenTypeId }, select: {id: true} });
        if (!screenTypeExists) {
            return new Error(`–¢–∏–ø —ç–∫—Ä–∞–Ω–∞ (ScreenType) —Å ID ${data.screenTypeId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        }
    } else if (operation === 'create') {
         return new Error(`screenTypeId –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è.`); // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —ç—Ç–æ –ª–æ–≤–∏—Ç—å
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º PixelStepDefinition (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏)
    if (data.pixelCode !== undefined) {
        const stepDefinitionExists = await prisma.pixelStepDefinition.findUnique({ where: { code: data.pixelCode }, select: {id: true} });
        if (!stepDefinitionExists) {
            return new Error(`–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —à–∞–≥–∞ –ø–∏–∫—Å–µ–ª—è (PixelStepDefinition) —Å –∫–æ–¥–æ–º '${data.pixelCode}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
        }
    } else if (operation === 'create') {
         return new Error(`pixelCode –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è.`); // –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Manufacturer (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω, –Ω–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω - –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)
    if (data.manufacturerCode !== undefined && data.manufacturerCode !== null) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–µ null
        const manufacturerExists = await prisma.manufacturer.findUnique({ where: { code: data.manufacturerCode }, select: {id: true} });
        if (!manufacturerExists) {
            return new Error(`–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (Manufacturer) —Å –∫–æ–¥–æ–º '${data.manufacturerCode}' –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        }
    }

    return null; // –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã
}

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
export const getModules = asyncHandler(async (req: Request, res: Response) => {
  const modules = await prisma.module.findMany({
    orderBy: { sku: "asc" }, // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ SKU
    include: { // –í–∫–ª—é—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        manufacturer: { select: { code: true, name: true } },
        screenType: { select: { id: true, name: true } },
        stepDefinition: { select: { code: true, stepValue: true } },
    }
  });
  res
    .status(200)
    .json({ message: "–°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π", data: modules });
});

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è –ø–æ ID
export const getModuleById = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    const { id } = idParamSchema.parse(req.params);
    try {
      const module = await prisma.module.findUniqueOrThrow({
        where: { id },
        include: { // –í–∫–ª—é—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            manufacturer: { select: { code: true, name: true } },
            screenType: { select: { id: true, name: true } },
            stepDefinition: { select: { code: true, stepValue: true } },
        }
      });
      res.status(200).json({ message: "–ú–æ–¥—É–ª—å –Ω–∞–π–¥–µ–Ω", data: module });
    } catch (e: any) {
      if (e instanceof Prisma.PrismaClientKnownRequestError && e.code === "P2025") {
        res.status(404);
        return next(new Error(`–ú–æ–¥—É–ª—å —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω.`));
      }
      return next(e);
    }
  }
);

// üìå –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è
export const createModule = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    const validatedData = createModuleSchema.parse(req.body);
    const {
        sku, type, moduleWidth, moduleHeight, moduleFrequency, moduleBrightness, priceUsd,
        manufacturerCode, screenTypeId, pixelCode
    } = validatedData;

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π
    const entityCheckError = await checkRelatedEntities({ manufacturerCode, screenTypeId, pixelCode }, 'create');
    if (entityCheckError) {
        res.status(400); // Bad Request, —Ç.–∫. –ø–µ—Ä–µ–¥–∞–Ω—ã –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ ID/–∫–æ–¥—ã
        return next(entityCheckError);
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å SKU
    const existingModule = await prisma.module.findUnique({
      where: { sku: sku },
      select: { id: true },
    });
    if (existingModule) {
      res.status(409); // Conflict
      return next(new Error(`–ú–æ–¥—É–ª—å —Å SKU '${sku}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`));
    }

    // 3. –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å
    try {
      const newModule = await prisma.module.create({
        data: {
          sku, type, moduleWidth, moduleHeight, moduleFrequency, moduleBrightness,
          priceUsd: priceUsd !== undefined && priceUsd !== null ? new Prisma.Decimal(priceUsd) : null,
          // –°–≤—è–∑–∏ —á–µ—Ä–µ–∑ connect
          screenType: { connect: { id: screenTypeId } },
          stepDefinition: { connect: { code: pixelCode } },
          // –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–º
          ...(manufacturerCode && { manufacturer: { connect: { code: manufacturerCode } } })
        },
        include: { // –í–∫–ª—é—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–≤–µ—Ç
            manufacturer: { select: { code: true, name: true } },
            screenType: { select: { id: true, name: true } },
            stepDefinition: { select: { code: true, stepValue: true } },
        }
      });
      res
        .status(201)
        .json({ message: "–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω", data: newModule });
    } catch (e: any) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ SKU (P2002)
      if (e instanceof Prisma.PrismaClientKnownRequestError && e.code === "P2002") {
        res.status(409);
        return next(new Error(`–û—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è. SKU '${sku}' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º.`));
      }
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ FK (P2003) - –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–æ–∫, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ
      if (e instanceof Prisma.PrismaClientKnownRequestError && e.code === "P2003") {
         console.error("FK constraint error during module creation:", e);
         res.status(400);
         return next(new Error(`–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å ${e.meta?.field_name ?? '—Å–≤—è–∑–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ–π'} –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è.`));
      }
      return next(e);
    }
  }
);

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è
export const updateModule = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    const { id } = idParamSchema.parse(req.params);
    const validatedData = updateModuleSchema.parse(req.body);
    const {
        sku, type, moduleWidth, moduleHeight, moduleFrequency, moduleBrightness, priceUsd,
        manufacturerCode, screenTypeId, pixelCode
    } = validatedData; // –í—Å–µ –ø–æ–ª—è –∑–¥–µ—Å—å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Ç–µ–ª–æ —Å–¥–µ–ª–∞–Ω–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–º .refine()

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π, –ï–°–õ–ò –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const entityCheckError = await checkRelatedEntities({ manufacturerCode, screenTypeId, pixelCode }, 'update');
     if (entityCheckError) {
         res.status(400); // Bad Request
         return next(entityCheckError);
     }

    // 2. –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è SKU, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
    if (sku) {
      const existingModule = await prisma.module.findUnique({
        where: { sku: sku },
        select: { id: true },
      });
      // –ï—Å–ª–∏ –º–æ–¥—É–ª—å —Å —Ç–∞–∫–∏–º SKU –Ω–∞–π–¥–µ–Ω –∏ —ç—Ç–æ –ù–ï —Ç–µ–∫—É—â–∏–π –æ–±–Ω–æ–≤–ª—è–µ–º—ã–π –º–æ–¥—É–ª—å
      if (existingModule && existingModule.id !== id) {
        res.status(409); // Conflict
        return next(new Error(`–ú–æ–¥—É–ª—å —Å SKU '${sku}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.`));
      }
    }

    // 3. –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const dataToUpdate: Prisma.ModuleUpdateInput = {};
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç—ã–µ –ø–æ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã
    if (sku !== undefined) dataToUpdate.sku = sku;
    if (type !== undefined) dataToUpdate.type = type;
    if (moduleWidth !== undefined) dataToUpdate.moduleWidth = moduleWidth;
    if (moduleHeight !== undefined) dataToUpdate.moduleHeight = moduleHeight;
    if (moduleFrequency !== undefined) dataToUpdate.moduleFrequency = moduleFrequency;
    if (moduleBrightness !== undefined) dataToUpdate.moduleBrightness = moduleBrightness;
    if (priceUsd !== undefined) dataToUpdate.priceUsd = priceUsd !== null ? new Decimal(priceUsd) : null;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤—è–∑–∏, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã ID/–∫–æ–¥—ã
    if (screenTypeId !== undefined) dataToUpdate.screenType = { connect: { id: screenTypeId } };
    if (pixelCode !== undefined) dataToUpdate.stepDefinition = { connect: { code: pixelCode } };
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π —Å–≤—è–∑–∏ Manufacturer: connect, disconnect –∏–ª–∏ –Ω–∏—á–µ–≥–æ
    if (manufacturerCode !== undefined) {
        if (manufacturerCode === null) { // –Ø–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω null –¥–ª—è –æ—Ç—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
             dataToUpdate.manufacturer = { disconnect: true };
        } else { // –ü–µ—Ä–µ–¥–∞–Ω –Ω–æ–≤—ã–π –∫–æ–¥ –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
             dataToUpdate.manufacturer = { connect: { code: manufacturerCode } };
        }
    }

    // 4. –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–¥—É–ª—å
    try {
      const updatedModule = await prisma.module.update({
        where: { id },
        data: dataToUpdate,
        include: { // –í–∫–ª—é—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–≤–µ—Ç
            manufacturer: { select: { code: true, name: true } },
            screenType: { select: { id: true, name: true } },
            stepDefinition: { select: { code: true, stepValue: true } },
        }
      });
      res
        .status(200)
        .json({ message: "–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω", data: updatedModule });
    } catch (e: any) {
      if (e instanceof Prisma.PrismaClientKnownRequestError) {
        if (e.code === "P2025") { // RecordNotFound
          res.status(404);
          return next(new Error(`–ú–æ–¥—É–ª—å —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω.`));
        } else if (e.code === "P2002") { // Unique constraint violation (–¥–ª—è SKU)
          res.status(409);
          return next(
            new Error(`–û—à–∏–±–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–æ–¥—É–ª—è ID ${id}. SKU '${sku}' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º.`)
          );
        } else if (e.code === "P2003") { // Foreign key constraint failed
            console.error("FK constraint error during module update:", e);
            res.status(400);
            // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–∞—è —Å–≤—è–∑—å –≤—ã–∑–≤–∞–ª–∞ –æ—à–∏–±–∫—É, —Å–ª–æ–∂–Ω–µ–µ –±–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥–∞ e.meta
            return next(new Error(`–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–æ–¥—É–ª—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω–Ω—ã–µ ScreenType, PixelStepDefinition –∏ Manufacturer —Å—É—â–µ—Å—Ç–≤—É—é—Ç.`));
        }
      }
      return next(e);
    }
  }
);

// üìå –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è
export const deleteModule = asyncHandler(
  async (req: Request, res: Response, next: NextFunction) => {
    const { id } = idParamSchema.parse(req.params);

    try {
      // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è (–¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ 404)
      const moduleExists = await prisma.module.findUnique({
        where: { id },
        select: { id: true },
      });
      if (!moduleExists) {
        res.status(404);
        return next(new Error(`–ú–æ–¥—É–ª—å —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω.`));
      }

      // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–ó–∞–≤–∏—Å—è—Ç –ª–∏ –¥—Ä—É–≥–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏ –æ—Ç —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è?)
      // –í —Ç–µ–∫—É—â–µ–π —Å—Ö–µ–º–µ –Ω–µ—Ç –º–æ–¥–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø—Ä—è–º—É—é —Å—Å—ã–ª–∞–ª–∏—Å—å –±—ã –Ω–∞ Module.id
      // –∫–∞–∫ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º Restrict. –ü–æ—ç—Ç–æ–º—É –ø—Ä—è–º—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
      // –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ. –ï—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–µ—Å—å.
      /*
      const relatedEntitiesCount = await prisma.someOtherModel.count({ where: { moduleId: id } });
      if (relatedEntitiesCount > 0) {
          res.status(409);
          return next(new Error(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –º–æ–¥—É–ª—å ID ${id}, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ${relatedEntitiesCount} –¥—Ä—É–≥–∏—Ö –∑–∞–ø–∏—Å—è—Ö.`));
      }
      */

      // 3. –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è
      await prisma.module.delete({ where: { id } });
      res.status(200).json({ message: "–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω" });

    } catch (e: any) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–æ–¥—É–ª—è ID ${id}:`, e);
      if (e instanceof Prisma.PrismaClientKnownRequestError && e.code === "P2025") {
          res.status(404);
          return next(new Error(`–ú–æ–¥—É–ª—å —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏).`));
      }
      // P2003 –Ω–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –Ω–µ—Ç FK —Å Restrict, —É–∫–∞–∑—ã–≤–∞—é—â–∏—Ö –Ω–∞ Module
      return next(e);
    }
  }
);