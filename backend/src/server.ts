import express, { Request, Response, NextFunction, Application } from "express"; // 
import http from 'http';
import dotenv from "dotenv";
import cors from "cors";
import helmet from "helmet";
import morgan from "morgan";
import passport from "passport";

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
import { prisma } from './lib/prisma';
import { configurePassport } from "./config/passport";

// --- –ú–∞—Ä—à—Ä—É—Ç—ã ---
import healthcheckRoute from "./routes/healthcheck";
import authRoutes from "./routes/authRoutes";
import userRoutes from "./routes/userRoutes";
import cabinetRoutes from "./routes/cabinetRoutes";
import cabinetMaterialRoutes from "./routes/cabinetMaterialRoutes";
import cabinetComponentRoutes from "./routes/cabinetComponentRoutes"; 
import componentServiceRoutes from "./routes/componentServiceRoutes";
import ipProtectionRoutes from "./routes/ipProtectionRoutes";
import manufacturerRoutes from "./routes/manufacturerRoutes";
import materialRoutes from "./routes/materialRoutes";
import moduleRoutes from "./routes/moduleRoutes";
import optionRoutes from "./routes/optionRoutes";
import pixelStepDefinitionRoutes from "./routes/pixelStepDefinitionRoutes";
import pixelTypeRoutes from "./routes/pixelTypeRoutes";
import pixelOptionRoutes from "./routes/pixelOptionRoutes";
import screenTypeRoutes from "./routes/screenTypeRoutes";
import screenTypeMaterialRoutes from "./routes/screenTypeMaterialRoutes";
import screenTypeOptionRoutes from "./routes/screenTypeOptionRoutes";
//import currencyRoutes from './routes/currencyRoutes';

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
dotenv.config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const app: Application = express(); // –Ø–≤–Ω–æ —Ç–∏–ø–∏–∑–∏—Ä—É–µ–º app
const API_PREFIX = process.env.API_PREFIX || '/api/v1'; // –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è API, –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤ .env

// --- –û—Å–Ω–æ–≤–Ω—ã–µ Middleware ---
app.use(cors()); // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS (–º–æ–∂–Ω–æ —É–∂–µ—Å—Ç–æ—á–∏—Ç—å –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
app.use(helmet()); // –ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ HTTP –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
app.use(express.json()); // –ü–∞—Ä—Å–∏–Ω–≥ JSON —Ç–µ–ª –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(morgan("dev")); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å
app.use(passport.initialize()); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Passport
configurePassport(passport); // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ Passport

// --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ú–∞—Ä—à—Ä—É—Ç–æ–≤ API ---
console.log(`Registering routes with prefix: ${API_PREFIX}`);

// –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–π –ø—É—Ç—å API
app.get(API_PREFIX, (req: Request, res: Response) => {
  res.status(200).json({ message: 'Calculator API is running!' });
});

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–æ—É—Ç–æ–≤ –¥–ª—è —Å—É—â–Ω–æ—Å—Ç–µ–π
app.use(`${API_PREFIX}/healthcheck`, healthcheckRoute);
app.use(`${API_PREFIX}/auth`, authRoutes);
app.use(`${API_PREFIX}/users`, userRoutes);
app.use(`${API_PREFIX}/cabinets`, cabinetRoutes);
app.use(`${API_PREFIX}/cabinet-materials`, cabinetMaterialRoutes);
app.use(`${API_PREFIX}/cabinet-components`, cabinetComponentRoutes);
app.use(`${API_PREFIX}/component-services`, componentServiceRoutes);
app.use(`${API_PREFIX}/ip-protection`, ipProtectionRoutes);
app.use(`${API_PREFIX}/manufacturers`, manufacturerRoutes);
app.use(`${API_PREFIX}/materials`, materialRoutes);
app.use(`${API_PREFIX}/modules`, moduleRoutes);
app.use(`${API_PREFIX}/options`, optionRoutes);
app.use(`${API_PREFIX}/pixel-step-definitions`, pixelStepDefinitionRoutes);
app.use(`${API_PREFIX}/pixel-types`, pixelTypeRoutes);
app.use(`${API_PREFIX}/pixel-options`, pixelOptionRoutes);
app.use(`${API_PREFIX}/screen-types`, screenTypeRoutes);
app.use(`${API_PREFIX}/screen-type-materials`, screenTypeMaterialRoutes);
app.use(`${API_PREFIX}/screen-type-options`, screenTypeOptionRoutes);
// if (currencyRoutes) { app.use(`${API_PREFIX}/currencies', currencyRoutes); } // –ï—Å–ª–∏ –Ω—É–∂–µ–Ω

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ---
// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–æ—É—Ç–æ–≤ (404) - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
app.use((req: Request, res: Response, next: NextFunction) => {
  const error = new Error(`–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω - ${req.originalUrl}`);
  res.status(404);
  next(error);
});

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ (–¥–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º)
app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
  // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.error(`[ERROR] ${err.message}\n${err.stack}`);

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ)
  const statusCode = res.statusCode === 200 ? 500 : res.statusCode;
  res.status(statusCode);

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
  res.json({
    message: err.message || "Internal Server Error",
    // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤, –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ - –Ω–µ—Ç
    stack: process.env.NODE_ENV === 'production' ? 'ü•û' : err.stack,
  });
});


// --- –ó–∞–ø—É—Å–∫ –°–µ—Ä–≤–µ—Ä–∞ –∏ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ ---
const PORT = process.env.PORT || 5000;

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π http —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ shutdown
const server = http.createServer(app).listen(PORT, () => {
  console.log(`üöÄ Backend server started successfully.`);
  console.log(`   Listening on: http://localhost:${PORT}`);
  console.log(`   API Root: http://localhost:${PORT}${API_PREFIX}`);
});

// –§—É–Ω–∫—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
const gracefulShutdown = async (signal: string) => {
  console.log(`\nüîå Received ${signal}. Starting graceful shutdown...`);
  console.log("   Closing HTTP server...");
  server.close(async (err) => {
    if (err) {
      console.error('   [Error] closing server:', err);
      process.exit(1); // –í—ã—Ö–æ–¥ —Å –æ—à–∏–±–∫–æ–π
    }
    console.log('   ‚úÖ HTTP server closed.');
    try {
      console.log('   Disconnecting Prisma...');
      await prisma.$disconnect(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ Prisma
      console.log('   ‚úÖ Prisma connection closed.');
      process.exit(0); // –£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥
    } catch (dbErr) {
      console.error('   [Error] disconnecting Prisma:', dbErr);
      process.exit(1); // –í—ã—Ö–æ–¥ —Å –æ—à–∏–±–∫–æ–π
    }
  });

  // –¢–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–≤–∏—Å–ª–æ
  setTimeout(() => {
    console.error('   [Timeout] Could not close connections in time, forcing shutdown.');
    process.exit(1);
  }, 15000); // 15 —Å–µ–∫—É–Ω–¥
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => gracefulShutdown('SIGINT')); // Ctrl+C
process.on('SIGTERM', () => gracefulShutdown('SIGTERM')); // docker stop, kill, etc.

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
process.on('uncaughtException', (error, origin) => {
  console.error(`\nüí• UNCAUGHT EXCEPTION! Origin: ${origin}`);
  console.error(error);
  console.error('   Shutting down application...');
  process.exit(1); // –ü—Ä–∏ —Ç–∞–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö –ª—É—á—à–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
});
process.on('unhandledRejection', (reason, promise) => {
  console.error('\nüí• UNHANDLED REJECTION!');
  console.error('   Reason:', reason);
  console.error('   Promise:', promise);
  console.error('   Shutting down application...');
  // –í–ê–ñ–ù–û: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å gracefulShutdown –∑–¥–µ—Å—å, —Ç.–∫. —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º.
  // –õ—É—á—à–µ –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å.
  server.close(() => {
      process.exit(1);
  });
  setTimeout(() => process.exit(1), 2000); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2—Å
});